# Простая проверка на совпадение
$_ = "yabba dabba doo";
# Регулярное выражение заключается в //
if(/abba/) {
    print("Yes!");
}

# Проверка совпадения шаблона
if("my_string" =~ /expr/) {}

# Переменные интерполируются в регулярных выражениях
$name = "denis";
if("str" =~ /$denis/)

### Специальные символы ###
. # ОДИН произвольный символ (кроме символа новой строки, который обозначается \n)
* # Нуль или более повторений предшествующего элемента
+ # Одно или более повторений предшествующего элемента
? # Предыдущий элемент используется 0 или 1 раз
() # Группировка символов (сохраняет в переменных)
(?:) # Несохраняющие скобки
\1 # Обратная ссылка (для обращения к тексту, совпавшему с элементами выражения в предыдущих круглых скобках)
\g{1} # Альтернативный способ указания обратной ссылки (ТОЛЬКО В PERL 5.1)
\g{-1} # Указание непосредственно предыдущей группы в круглых скобках
| # Альтернатива (ИЛИ). Например, /fred( |\t)+barney/ совпадает, если слова fred и barney разделяются пробелами или символами табуляции
[] # Символьный класс (совпадает с одним из символов, включенных в скобки)
- # Диапазон символов. Например, [a-z] совпадает с любым символом от a до z
[^abc] # Совпадает с любым символом КРОМЕ включенных
\d # Любая цифра
\w # Любая буква, цифра или символ подчеркивания
\s # Любой пробельный символ (подачи страницы, табуляции, новой строки, возврата курсора и пробела)
# perl 5.10:
\h # Горизонтальный пропуск (табуляция или пробел)
\v # Вертикальный пропуск
\R # Любой разрыв строк
^ # Начало строки
$ # Конец строки
\b # Конец или начало слова (совпадает с началом или концом группы символов \w)
(?<my>template) # Именованное сохранение группы. Доступ к значению можно получить через хеш (%+{'my'})
{5, 15} # От 5 до 15 повторений предшествующего символа
{5,} # От 5 повторений

m/expression/; # Определение регулярного выражения. Вместо / могут использоваться и другие разделители

# Модификаторы (могут объединяться /ex/xis)
/expr/i; # Поиск без учета регистра
/expr/s; # Включение совпадения точки с любым символом (по умолчанию не совпадает с новой строкой)
/expr/x; # Включение пропусков (пробелы и символы табуляции не будут учитываться в выражении, имея только декоративный характер)

### Переменные совпадения ###
# Фрагменты исходной строки, совпавшие с группами шаблона, автоматически сохраняются в переменных вида $1, $2 и т.д.
if("456" =~ /4(\d+)6/) {
    print($1); # Будет выведено 5
}
# Переменные совпадения продолжают существовать до следующего успешного совпадения

if("f456d" =~ /\d+/) {
    $&; # В данной переменной автоматически сохраняется часть строки, совпавшая с шаблоном
    $`; # В данной переменной сохраняется часть строки, предшествующая совпавшей
    $'; # В данной строке сохраняется часть строки после совпавшей
}