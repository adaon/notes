// ПРИ ВЫЗОВЕ КАЖДОГО МЕТОДЕ ВОСПРОИЗВЕДЕНИЯ ЭФФЕКТА МОЖНО УКАЗАТЬ ФУНКЦИЮ ОБРАТНОГО ВЫЗОВА

// Изменение встроенных свойств стиля CSS =====================================

// Получение значения CSS-свойства
element.css('background-color');
// Установка значения CSS-свойств
element.css('background-color', 'black');
element.css({'background-color':'black', 'color':'red'});

// Эффекты скрытия и отображения ==============================================

element.show([speed]); // Отображение элементов (восстановка прежнего значения)
element.hide([speed]); // Скрытие элементов (display:none)

element.fadeIn([speed]);
element.fadeOut([speed]);
element.fadeTo('fast', 0.5);

element.toggle([speed]); // Действует как show и hide Показывает элемент, если он скрыт и скрывает, если он отображен
element.slideToggle([speed]);

// Эффекты и скорость выполнения ==============================================

// Для любых эффектов есть 3 предустановленных значения:
'slow' // 0.6 секунды
'normal' // 0.4 секунды
'fast' // 0.2 секунды

// Создание собственных анимационных эффектов =================================

elem.animate({'opacity': 'toggle'}, 'slow'); // Реализация переключения fadeIn/Out
// Реализация переключения с эфффектами выдвижения и растворения
elem.animate({
    opacity: 'toggle',
    height: 'toggle'
}, 'slow');
// Движение на 200 пикселей вправо и вниз
// ВНИМАНИЕ! Элемент должен иметь position:relative|absolute
element.animate({
    'left': '+=200px',
    'top': '+=200px'
}, 'slow');

// Одновременное и поочередное воспроизведение эффектов =======================

element.animate(...).animate(...); // Поочередное воспроизведение эффектов для элемента

// Воспроизведение анимационного эффекта вместе в предыдущим (queue:false)
element.fadeTo('slow', 0.5).animate({
    width: '100'
}, {duration: 'slow', queue: false});

element.animate(...).animate(...).queue(function() {
    // Функция обратного вызова
    element.dequeue(); // Данный метод необходимо вызвать, чтобы воспроизведение цепочки не остановилось
});