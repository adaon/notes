// Селекторы ==================================================================

// Для использования специальных символов (!"#$%&'()*+,./:;<=>?@[\]^`{|}~) как части имени, необходимо экранировать их с помощью \\

selector1, selector2 // Комбинирует селекторы и возвращает набор

* // Все элементы

a:animated // Выделяет все элементы, которые в данный момент анимируются

a[href] // Элементы с атрибутом href
a[href|='en'] // Элемент, атрибут которого href равен en или начинается с en-
a[href*='str'] // Элемент, атрибут которого href содержит str
a[href~='str'] // Элемент, атрибут которого содержит слово str (окруженное пробелами)
a[href$='str'] // Элемент, атрибут которого href заканчивается на str
a[href='str'] // Элемент, атрибут которого href равен str
a[href!='str'] // Элемент, атрибут которого href не равен str
a[href^='str'] // Элемент, атрибут которого href начинается с str
a[href='str1'][src='str2'] // Множественный фильтр по атрибутам

a:checked // Выбранный элемент
a:disabled // Элементы с атрибутом disabled
a:enabled // Элементы, не имеющие атрибута disabled
a:focus // Элементы, на которых в настоящее время фокус
a:hidden // Скрытые элементы
a:visible // Видимые элементы
a:selected // Выделенные элементы

parent > child // Элементы child, которые являются дочерними parent
prev + next // Элементы, идущие непосредственно за заданным
prev ~ siblings // Все элементы-братья, идущие за заданным

a:has('p') // Элементы, содержащие заданный элемент
a:contains('str') // Элементы, содержащие str
a:empty // Пустые элементы (не имеющие дочерних, включая текстовые)

a:not(selector)

a:first // Первый найденный элемент
a:eq(5) // Пятый элемент
a:gt(5) // Все элементы, порядковый индекс которых в массиве найденных элементов выше 5
a:lt(5) // Все элементы, порядковый индекс которых в массиве найденных элементов ниже 5
a:even // Четные элементы
a:odd // Нечетные элементы
a:last // Последний найденный элемент

a:only-child // Элемент, являющийся единственным дочерним элементом своего родителя
a:parent // Элемент, являющийся родителем для любого другого элемента, включая текстовые

a:first-child
a:last_child
a:nth-child(5) // Пятый дочерний элемент

a:file // Элементы с файловым типом
a:header // Элементы-заголовки (h1, h2 ...)
a:image // Элементы-изображения
a:input // Элементы ввода (input, textarea, select, button)
a:password // Элементы пароля
a:radio // Элементы радиокнопки
a:reset // Элементы с типом reset
a:submit // Элементы submit
a:text // Текстовые элементы

// Методы обхода ==============================================================

elem.filter('selector'); // Фильтрует элементы
// Можно передавать функцию фильтрации
// Текущий элемент доступен как this
elem.filter(function() {
    return true; 
});

elem.next(); // Возвращает следующий элемент
elem.nextAll(); // Возвращает все следующие элементы
elem.prev(); // Возврашает предыдущий элемент
elem.prevAll(); // Возвращает все предыдущие элементы
elem.siblings(); // Возвращает все элементы, расположенные на том же уровне

elem.nextAll().andSelf(); // Возвращает все следующие элементы плюс сам исходный

jobject.get(0); // Получить первый элемент DOM из объекта
jobject[0]; // То же самое

elem.is('selector'); // Соответствует ли хотя бы 1 элемент набора указанному селектору