f = open('file.txt', 'w[b]') # Открывает файл только для чтения
f = open('file.txt', 'r[b]') # Открывает файл только для записи
f = open('file.txt', 'a[b]') # Открывает файл для записи в конец
f = open('file.txt') # Открывает файл для чтения (по умолчанию)
f = open('file.txt', encoding='latin-1') # Файлы с текстом юникода в Python 3.0
f = open('file.txt', 'rb') # Файлы с двоичными данными в Python 3.0
f = open('file.txt', 'w+') # Открывает файл для чтения и записи
f = open('file.txt', 'r', 0) # Значение 0 означает, что файл не будет буферизоваться ДЛЯ ДВОИЧНЫХ РЕЖИМОВ, т.е. вывод происходит немедленно

f.close()
f.flush() # Выталкивание данных в файл
f.seek(N) # Устанавливает позицию для сл. операции
f.fileno() # Получение соответствующего идентификатора файла

str = f.read() # Чтение файла целиком в строку
str = f.read(N) # Чтение следующих N байтов
str = f.readline() # Чтение следующей текстовой строки
list = f.readlines() # Чтение файла целиком в список строк

f.write('sgds') # Запись строки байтов в файл
f.writelines(list) # Запись списка строк в файл

for str in f: # Построчное чтение