import atexit
# Регистрирует функцию, которая будет выполнена перед завершением работы интерпретатора.
# Последняя зарегистрированная функция будет вызвана первой.
# Если в процессе функции будет выброшено исключение, в стандартный поток будет выведена информация, но само исключение будет проигнорировано.
register(func[, args][, kwargs])

import copy
# Объекты могут содержать методы __copy__(self) и __deepcopy__(self, visit).
copy(x) # Создает поверхностную копию объекта, копируя его элементы по ссылке
# Создает глубокую копию объекта, рекурсивно копируя все вложенные объекты.
# Visit - это словарь, который используется для запоминания посещенных объектов, чтобы избежать зацикливания.
deepcopy(x[, visit])

import gc
collect([generation]) # Запускает полную сборку мусора. Возвращает количество обнаруженных недоступных элементов.
disable() # Отключает механизм сборки мусора.
enable() # Включает механизм сборки мусора.
garbage # Переменная, содержащая доступный только для чтения список экземпляров пользовательских классов, которые больше не используются, но не могут быть удалены, потому что связаны цилкическими ссылками и имеют метод __del__.
get_count() # Возвращает кортеж (count0, count1, count2) с текущик количеством объектов в каждом поколении.
get_debug() # Возвращает текущие состояния флагов отладки.
get_objects() # Возвращает список всех объектов, находящихся под контролем сборщика мусора (за исключением возвращаемого списка).
get_referrers(obj1, obj2, ...) # Возвращает список всех объектов, которые непосредственно ссылаются на объекты obj1, obj2 ... Возврашаемый список может содержать объект, которые еще не были утилизированы сборщиком, а также объекты, находящиеся на стадии создания.
get_referents(obj1, obj2) # Возвращает список объектов, на которые ссылаются объекты obj1, obj2.
get_threshold() # Возвращает кортеж с текущими пороговыми значениями запуска сборщика мусора.
isenabled() # Включен ли механизм.
set_debug(flags) # Устанавливает отладочные флаги сборщика мусора. DEBUG_STATS, DEBUG_COLLECTABLE, DEBUG_UNCOLLECTABLE, DEBUG_INSTANCES, DEBUG_OBJECTS, DEBUG_SAVEALL, DEBUG_LEAK.
set_threshold(threshold0[, threshold1, threshold2]) # Устанавливает частоту запуска сборщика мусора.

import inspect
cleandoc(doc) # Приводит в порядок строку документирования doc, замещая все символы табуляции пробелами и удаляя отступы.
currentframe() # Возвращает объект кадра стека, соответствующий кадру стека вызывающей функции.
formatargspec(args[, vargs][, varkw][, defaults]) # Возвращает отформатированную строку, представляющую значения, возвращаемые функцией getargspec().