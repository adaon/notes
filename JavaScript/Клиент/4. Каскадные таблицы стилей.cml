!1 Каскадные таблицы стилей

!2 Управление встроенными стилями

Самый простой способ управления стилями - это манипулирование атрибутом !!style отдельных элементов документа. Значением свойства style элемента является объект CSSStyleDeclaration. Свойства этого объекта представляют CSS-свойства, определенные в HTML-атрибуте style.

{-
elem.style.fontSize = '24pt';
-}

Все значения свойств данного объекта должны задаваться в виде строк (без завершающих точек с запятой).

Также, во всех свойствах позиционирования должны быть указаны единицы измерения.

Если CSS-свойство содержит в имени дефис, имя свойства объекта style образуетс япутем удаления дефисов и перевода в верхний регистр буквы, непосредственно следующей за каждым из них. Если имя CSS-свойства совпадает с зарезервированным словом JavaScript, к этому имени добавляется префикс css.

Атрибут style элемента - это его встроенный стиль, и он переопределяет любые правила стилей в таблице CSS. Свойства объекта CSSStyleDeclaration возвращают осмысленные значения, только если ранее они были установлены явно.

!2 Вычисленные стили

Также как и встроенные, вычисленные стили представлены объектом CSSStyleDeclaration. Вычисленные стили доступны только для чтения.

{-
var style = window.getComputedStyle(elem, null); // Во втором аргументе передается строка с именем псевдоэлемента CSS, такого как ":before", ":after", "first-line" или "first-letter".
-}

Различия между встроенными и вычисленными стилями:

{:
* Свойства вычисленного стиля доступны только для чтения.
* Свойства вычисленных стилей имеют абсолютные значения: относительные единицы преобразуются в абсолютные значения.
* Свойства, являющиеся краткой формой записи, не вичисляются - только фундаментальные свойства, на которых они основаны.
* Свойство cssText вычисленного стиля не определено.
:}

Метод getComputedStyle() не поддерживается в IE и более ранних версиях. В IE все элементы имеют свойство currentStyle, значением которого является объект CSSStyleDeclaration.

!2 CSS-классы

{-
elem.className = 'class1 class2 class3';
-}

HTML5 определяет свойство classList всех элементов. Значением этого свойства является объект DOMTokenList - подобный массиву объект, доступный только для чтения, элементы которого содержат отдельные имена классов, присвоенных элементу.

{-
elem.classList.add('myclass');
elem.classList.remove('myclass');
elem.classList.toggle('myclass');
elem.classList.contains('myclass');
-}

!2 Управление таблицами стилей

Свойство document.!!styleSheets возвращает доступный только для чтения объект, подобный массиву, содержащий элементы !CSSStyleSheet, представляющие таблицы стилей документа. Если в элементе <style> или <link>, определяющем или ссылающемся на таблицу стилей, определить атрибут title, этот объект будет доступен как свойство объекта CSSStyleSheet с именем, указанным в атрибуте title.

!3 Включение и выключение таблиц стилей

Элементы <style> и <link> и элементы CSSStyleSheet определяют свойство disabled, доступное сценариям на языке JavaScript для чтения и записи. Если свойство принимает значение true, таблица стилей оказывается отключенной и будет игнорироваться браузером.

!3 Получение, вставка и удаление правил из таблиц стилей

Объект CSSStyleSheet имеет свойство !!cssRules[], хрянящее массив правил стилей. В IE это свойство носит имя rules, а не cssRules. Элементами данного массива являются объекты CSSRule. В стандартном API объект CSSRule может представлять CSS-правила любого типа, включая @-правила, такие как директивы @import и @page. Однако в IE массив rules[] может содержать только фактические правила таблицы стилей.

Объект CSSRule имеет два переносимых свойства. Свойство !!selectorText - это CSS-селектор для данного правила, а свойство !!style - это ссылка на доступный для записи объект CSSStyleDeclaration, который описывает стили, связанные с данным селектором. Свойство !!cssText объекта CSSStyleDeclaration содержит текстовое представление правила.

Стандартный прикладной интерфейс определяет методы insertRule() и deleteRule(), позволяющие добавлять и удалять правила:

{-
document.styleSheets[0].insertRule('H1 { text-weight: bold; }', 0);
-}

Браузер IE не поддерживает методы insertRule() и deleteRule(), но определяет практически эквивалентные им функции addRule() и removeRule(). Единственное отличие в том, что addRule() ожидает получить селектор и стиль в текстовом виде в двух отдельных аргументах.

!3 Создание новых таблиц стилей

В большинстве браузеров эта операция выполняется с помощью стандартных приемов, реализованных в модели DOM: создается новый элемент <style> и вставляется в документ в раздел <head>, затем с помощью свойства innerHTML добавляется содержимое таблицы стилей. Однако в IE8 и в более ранних версиях новый объект CSSStyleSheet необходимо создавать с помощью нестандартного метода document.createStyleSheet(), а текст таблицы стилей добавлять с помощью свойства cssText.